language: go

branches:
  only:
  - master
  - /^v.*$/

go:
  - "1.10.x"

sudo: false

services:
  - docker

before_install:
  - docker-compose up -d
  - |

    jq --version

    ctr=0
    max_retries=50
    while [ $(curl -I -u "root:123qwe123" http://localhost:10080/users/sign_in | head -1 | grep 200 | wc -l | tr -d ' ') -ne 1 ]; do
      ctr=`expr $ctr + 1`
      echo waiting for gitlab to come up
      sleep 20
      if [ $ctr == $max_retries ]; then
        echo "max retries (${max_retries}) reached"
        exit 1
      fi
    done

    ###################################################
    # WARM UP TIME (don't mind me)
    ###################################################
    sleep_time=100
    echo "sleeping for ${sleep_time} seconds"
    sleep ${sleep_time}
    source testdata/credentials.sh
    env | grep GITLAB
    ###################################################

    echo "============ setting up test data ============="
    GITLAB_USERNAME=$GITLAB_USERNAME GITLAB_PASSWORD=$GITLAB_PASSWORD GITLAB_HTTP_URL=$GITLAB_HTTP_URL ./testdata/seeder.sh
    echo "============ test data completed  ============="
  - go get github.com/golang/lint/golint
  - make getdep

script:
  - golint -set_exit_status ./...
  - |
    source testdata/credentials.sh
    go run main.go get users
    go run main.go get groups
    go run main.go get projects
    travis_wait 30 make coverage
  - bash <(curl -s https://codecov.io/bash) # Set CODECOV_TOKEN in your environment variables.

after_script:
  - sleep 1

before_deploy:
  - VERSION=${TRAVIS_TAG} make all

deploy:
  provider: releases
  api_key: $GITHUB_OAUTH_TOKEN
  file:
    - ./bin/gitlabctl-darwin-amd64
    - ./bin/gitlabctl-linux-amd64
    - ./bin/gitlabctl-windows-amd64.exe
    - ./bin/shasum256.txt
  skip_cleanup: true
  on:
    tags: true



