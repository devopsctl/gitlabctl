// Copyright Â© 2018 github.com/devopsctl authors
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

package cmd

import (
	"github.com/spf13/cobra"
	gitlab "github.com/xanzy/go-gitlab"
)

var {{.Name}} = &cobra.Command{
	Use:           "{{.Use}}",
	Short:         "{{.Short}}",
	Aliases: []string{""},
	// NOTE(generator): Ensure to add some examples for this command
	Example: "",
	SilenceErrors: true,
	SilenceUsage:  true,
	DisableAutoGenTag: true,
	Args:          cobra.ExactArgs({{.MaxArgs}}), 

	// NOTE(generator): remove PreRunE if not required
	// PreRunE is where to validate command flags
	PreRunE: func(cmd *cobra.Command, args[]string) error {
		return nil
	},

	RunE: func(cmd *cobra.Command, args []string) error {
		// NOTE(generator): rename this func and change/remove this comment
		return runCmdFunc(cmd, args[0])
	},
}

func init() {
	{{.Parent}}.AddCommand({{.Name}})
	// NOTE(generator): add {{.Name}} flags definitions below
}

// NOTE(generator): rename this func and change/remove this comment
func runCmdFunc(cmd *cobra.Command) error {
	return nil
}

